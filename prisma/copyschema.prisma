// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String  @unique
  password String
  role     Role    @default(ADMIN)
  active   Boolean @default(true)

  accountVerified           Boolean   @default(false)
  verificationCode          Int?
  verificationCodeExpires   DateTime?
  resetPasswordToken        String?
  resetPasswordTokenExpires DateTime?
  createdAt                 DateTime  @default(now())
  updatedAt                 DateTime  @updatedAt
  Profile                   Profile[]
  Post                      Post[]
}

enum Role {
  ADMIN
  SUPERADMIN
}

model Profile {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  phone  String?
  bio    String?
  gender String?
}

model Post {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String // Post title
  author      User      @relation(fields: [authorId], references: [id])
  authorId    String    @db.ObjectId
  imageUrl    String? // Optional field for image URL
  description String // Post description
  category    String // Post category
  publishDate DateTime? // Publish date
  likes       Int       @default(0) // Default value for likes
  views       Int       @default(0) // Default value for views

  createdAt DateTime @default(now()) // Timestamp for creation
  updatedAt DateTime @updatedAt // Timestamp for updates
}
